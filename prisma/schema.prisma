// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model WorkoutTemplate {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  exercises  WorkoutExerciseTemplate[]
}

model WorkoutExerciseTemplate {
    id         String   @id @default(uuid())
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    exercise   Exercise @relation(fields: [exerciseId], references: [id])
    exerciseId String
    workout    WorkoutTemplate @relation(fields: [workoutId], references: [id])
    workoutId  String
    order      Int
    setOrder  Int
    type       String
    reps       Int?
    duration   Int?
}

model Exercise {
    id         String   @id @default(uuid())
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    workoutExerciseTemplates WorkoutExerciseTemplate[]
    workoutExercises WorkoutExercise[]
    name       String
}

model Workout {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  exercises  WorkoutExercise[]
  user       User  @relation(fields: [userId], references: [id])
  userId     String
}

model WorkoutExercise {
    id         String   @id @default(uuid())
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    exercise   Exercise @relation(fields: [exerciseId], references: [id])
    exerciseId String
    workout    Workout @relation(fields: [workoutId], references: [id])
    workoutId  String
    order      Int
    setOrder   Int
    type       String
    reps       Int?
    duration   Int?
    weight     Int?
}

model User {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  username   String @unique
  passwordHash String
  workouts   Workout[]
}
